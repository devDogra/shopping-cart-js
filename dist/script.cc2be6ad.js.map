{"version":3,"sources":["items.json","scripts/script.js"],"names":["module","exports","price","id","color","category","type","code","rgba","hex","storeItemsDiv","document","querySelector","cartItemsDiv","cartItemsBtn","storeItemTemplate","cartItemTemplate","store","items","renderStore","forEach","si","storeItemElement","createStoreItemElement","appendChild","storeItem","content","cloneNode","storeItemDisplay","storeItemType","storeItemName","storeItemPrice","style","backgroundColor","innerText","addEventListener","e","target","matches","cart","renderCart","length","setAttribute","removeAttribute","ci","cartItemElement","createCartItemElement","quantity","cartItem","cartItemDisplay","cartItemName","cartItemQuantity","cartItemTotalPrice","item","toggleAttribute"],"mappings":"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","file":"script.cc2be6ad.js","sourceRoot":"..","sourcesContent":["module.exports=[{price:100,id:1,color:\"black\",category:\"hue\",type:\"primary\",code:{rgba:[255,255,255,1],hex:\"#000\"}},{price:200,id:2,color:\"white\",type:\"primary\",category:\"primary\",code:{rgba:[0,0,0,1],hex:\"#FFF\"}},{price:120,id:3,color:\"red\",category:\"hue\",type:\"primary\",code:{rgba:[255,0,0,1],hex:\"#FF0\"}},{price:140,id:4,color:\"blue\",category:\"hue\",type:\"primary\",code:{rgba:[0,0,255,1],hex:\"#00F\"}},{price:80,id:5,color:\"yellow\",category:\"hue\",type:\"primary\",code:{rgba:[255,255,0,1],hex:\"#FF0\"}},{price:500,id:6,color:\"green\",category:\"hue\",type:\"secondary\",code:{rgba:[0,255,0,1],hex:\"#0F0\"}},{price:1e3,id:7,color:\"black\",category:\"hue\",type:\"secondary\",code:{rgba:[0,0,0,1],hex:\"#000\"}}];","import items from \"../items.json\";\r\n\r\nconst storeItemsDiv = document.querySelector(\".store-items\");\r\nconst cartItemsDiv = document.querySelector(\".cart-items\");\r\nconst cartItemsBtn = document.querySelector(\".cart-btn\");\r\n\r\nconst storeItemTemplate = document.querySelector(\"#store-item-template\");\r\nconst cartItemTemplate = document.querySelector(\"#cart-item-template\");\r\n\r\nconst store = [...items];\r\n\r\n// todo: add to cart\r\ndocument.addEventListener(\"click\", (e) => {\r\n    if (!e.target.matches(\".add-to-cart\")) return;\r\n});\r\n\r\n// also todo: fetch store items from items.json instead of hard coding.\r\nfunction renderStore() {\r\n    store.forEach((si) => {\r\n        let storeItemElement = createStoreItemElement(si);\r\n        storeItemsDiv.appendChild(storeItemElement);\r\n    });\r\n}\r\nfunction createStoreItemElement(si) {\r\n    let storeItemTemplateClone = storeItemTemplate.content.cloneNode(true);\r\n    let storeItem = storeItemTemplateClone.querySelector(\".store-item\");\r\n    let storeItemDisplay = storeItem.querySelector(\".item-display\");\r\n    let storeItemType = storeItem.querySelector(\".item-type\");\r\n    let storeItemName = storeItem.querySelector(\".item-name\");\r\n    let storeItemPrice = storeItem.querySelector(\".item-price\");\r\n\r\n    storeItemDisplay.style.backgroundColor = si.color;\r\n    storeItemType.innerText = si.type;\r\n    storeItemName.innerText = si.color;\r\n    storeItemPrice.innerText = `$ ${si.price}`;\r\n\r\n    storeItem.id = si.id;\r\n    return storeItem;\r\n}\r\nrenderStore();\r\n// WORKING!:::\r\n// if 0 items, cartbtn not visible\r\n// if cartbtn not visible, neither is cart\r\n// if !0 items, cartbtn visible, and can toggle cart on or off\r\nconst cart = [\r\n    // { item: items[0], quantity: 1 },\r\n    // { item: items[2], quantity: 2 },\r\n    // { item: items[3], quantity: 0 },\r\n    // we will make sure an item of quantity 0 is never here\r\n];\r\n\r\n// ADD THE FLOATING CART BTN AT THE END, get the basic prototype ready first\r\n// Setup cart\r\n// intially, go thru cart[] and if there are any items, add them to cartItemsDiv\r\n// if cart[] not empty, make the cart icon visible\r\n// add click event listener to open cart\r\n\r\n// toggle cart\r\nrenderCart();\r\n\r\ndocument.addEventListener(\"click\", (e) => {\r\n    if (e.target.matches(\".cart-btn>img\")) {\r\n        cartItemsDiv.toggleAttribute(\"show\");\r\n    }\r\n});\r\n// click event listener for toggling cart menu\r\n// document.addEventListener('click', e =>{\r\n//     if (e.target.matches())\r\n// })\r\n\r\n// when we press the X btn, find that element in cart[] and nuke it from there,\r\n// then render the cart again\r\n\r\n// when we press the --- btn, find that element in cart[], decrease its quantity. if quantity becomes 0, nuke it from cart[]\r\n// then render cart again\r\n\r\n// when we press add to cart on a store item, find that item in items[],\r\n// find that item in cart[]. if there in cart[], increase its quantity,\r\n// otherwise append it to cart[]\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                    Note                                    */\r\n/* -------------------------------------------------------------------------- */\r\n// the faster way is probably to just hold a hashmap with all the items' quantity, instead of popping pushing items like this, and just operating off whether their quantity is 0 or not, but let's go with this approach first then we can come to that.\r\n\r\n/* -------------------------------------------------------------------------- */\r\n\r\nfunction renderCart() {\r\n    if (cart.length != 0) {\r\n        document.querySelector(\".cart-btn\").setAttribute(\"show\", \"\");\r\n    } else {\r\n        document.querySelector(\".cart-btn\").removeAttribute(\"show\");\r\n    }\r\n    cart.forEach((ci) => {\r\n        let cartItemElement = createCartItemElement(ci);\r\n        cartItemsDiv.appendChild(cartItemElement);\r\n    });\r\n}\r\n\r\nfunction createCartItemElement(ci) {\r\n    if (ci.quantity == 0) return null;\r\n\r\n    let cartItemTemplateClone = cartItemTemplate.content.cloneNode(true);\r\n\r\n    let cartItem = cartItemTemplateClone.querySelector(\".cart-item\");\r\n    let cartItemDisplay = cartItem.querySelector(\".cart-item-display\");\r\n    let cartItemName = cartItem.querySelector(\".cart-item-name\");\r\n    let cartItemQuantity = cartItem.querySelector(\".cart-item-quantity\");\r\n    let cartItemTotalPrice = cartItem.querySelector(\".cart-item-total-price\");\r\n\r\n    cartItemDisplay.style.backgroundColor = ci.item.color;\r\n    cartItemName.innerText = ci.item.color;\r\n    cartItemQuantity.innerText = `x${ci.quantity}`;\r\n    cartItemTotalPrice.innerText = `$ ${ci.item.price * ci.quantity}`;\r\n\r\n    cartItem.id = ci.id;\r\n    return cartItem;\r\n}\r\n\r\n/* -------------------------------------------------------------------------- */\r\n\r\n// // set up store\r\n// export function setupStore() {\r\n//     items.forEach((item) => {\r\n//         renderStoreItem(item);\r\n//     });\r\n// }\r\n"]}